@using Microsoft.EntityFrameworkCore
@using App.Menu
@inject AppDbContext dbContext
@inject AdminSidebarService _AdminSidebarService
@{
    ViewData["Title"] = "Thông tin Db";
    var connect = dbContext.Database.GetDbConnection();
    var dbName = connect.Database;
    var can_connect = dbContext.Database.CanConnect();
    Layout = "/Views/Shared/_LayoutAdmin.cshtml";
}
<partial name="_AlertMessage" />
<h2>
    Thông tin về cơ sở dữ liệu
</h2>
<p>- Database: @dbName</p>
<p>- Source: @connect.DataSource</p>
<p>- State: @connect.State</p>
<hr>

<h2>Migrations</h2>
@foreach (var migration in dbContext.Database.GetAppliedMigrations())
{
    <p>@migration</p>
}
@foreach (var migration in dbContext.Database.GetPendingMigrations())
{
    <p>@migration (pending)</p>
}



@if (!can_connect)
{
    <p class="alert alert-danger"> Không có khả năng kết nối đến database</p>
}
<hr>
@if (dbContext.Database.GetPendingMigrations().Any())
{
    <form method="post">
        <button class="btn btn-success" type="submit" asp-action="Migrate"> Tạo Db (Cập nhật migration)</button>
    </form>
}
@if (can_connect)
{
    <h2>Các Table</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
        @foreach (System.Data.DataRow row in table.Rows)
        {
            <li>@row["TABLE_NAME"]</li>
        }
    </ul>

    <a class="btn btn-danger" asp-action="DeleteDb"> Xóa Database: @dbName</a>
    <a class="btn btn-danger" asp-action="SeedData"> Seed Data</a>
}
@{
    _AdminSidebarService.SetActive("DbManage", "index", "Database");
}
@section Sidebar
{
@Html.Raw(_AdminSidebarService.renderHtml())
}