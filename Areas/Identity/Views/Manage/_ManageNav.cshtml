@using App.Areas.Identity.Views.Manage
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<AppUser> SignInManager
@{
        var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
        <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile"
                        asp-action="Index">Hồ sơ</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email"
                        asp-action="Email">Email</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.PhoneNumberNavClass(ViewContext)" id="PhoneNumber"
                        asp-action="PhoneNumber_">PhoneNumber</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)"
                        id="change-password" asp-action="PassWordSet">Mật khẩu</a></li>
        @if (hasExternalLogins)
        {
                <li id="external-logins" class="nav-item"><a id="external-login"
                        class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)"
                        asp-action="ExternalLogins">External
                                logins</a></li>
        }
        <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"
                        id="two-factor" asp-action="TwoFactorAuthentication">Xác thực hai yếu tố</a></li>
</ul>
